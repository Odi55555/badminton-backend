function App(a,b,c,d,e){"use strict";var f=this;a.$on("showLogin",function(){f.login()}),b.fromTemplateUrl("states/login/login.html",{scope:a}).then(function(a){f.modal=a}),a.loginData={},f.login=function(){f.modal.show()},a.closeLogin=function(){f.modal.hide()},a.doLogin=function(){console.log("Doing login",a.loginData),d.login(a.loginData.username,a.loginData.password).then(function(b){200===b.status&&(e.token=b.data.id,e.username=a.loginData.username,a.closeLogin())},function(){})}}function playerService(a,b,c,d,e,f){function g(f,g){function i(a){return c.token=a.data.id,c.username=f,c.userId=a.data.userId,e.set("token",c.token),e.set("username",c.username),e.set("userId",c.userId),d.loginConfirmed(),a}function j(a){return c.token=void 0,b.error("XHR Failed for login."+a.data),a}return a.post(h+"/login",{username:f,password:g}).then(i)["catch"](j)}var h=f.apiEndpoint+"/Players";return{login:g}}function gameService(a,b,c){function d(){function c(a){return a.data}function d(a){b.error("XHR Failed for getGames."+a.data.error.message)}return a.get(h+"?filter[order]=date").then(c)["catch"](d)}function e(){function c(a){return a.data.games}function d(a){b.error("XHR Failed for getGames."+a.data.error.message)}return a.get(h+"/gamesWithRegistrations").then(c)["catch"](d)}function f(c){function d(a){return a.data}function e(a){return b.error("XHR Failed for createGame."+a.data),a}return a.post(h,c).then(d)["catch"](e)}function g(c){function d(a){return a.data}function e(a){b.error("XHR Failed for changeGameState."+a.data)}return a.put(h+"/"+c.id,c).then(d)["catch"](e)}var h=c.apiEndpoint+"/Games";return{getGames:d,getGamesWithRegistrations:e,createGame:f,changeGameState:g}}function registrationService(a,b,c){function d(c){function d(a){return a.data}function e(a){b.error("XHR Failed for register."+a.data)}return a.post(f+"/register",c).then(d)["catch"](e)}function e(c){function d(a){return a.data.getRegistration}function e(a){b.error("XHR Failed for getRegistration."+a.data.error.message)}return a.post(f+"/getRegistration",c).then(d)["catch"](e)}var f=c.apiEndpoint+"/Registrations";return{register:d,getRegistration:e}}function RegisterGame(a,b,c,d,e,f,g){"use strict";var h=this;f.$on("$ionicView.enter",function(){h.games=[],h.playGame=!1,h.preferredTimeslot=e.get("preferredTimeslot")||"Egal",h.duration=e.get("duration")||"Egal",h.backToCompany=e.get("backToCompany")||!1,h.dinner=e.get("dinner")||!1,a.getGames().then(function(a){c.each(a,function(a){"planned"!==a.state||moment(a.date).isBefore(new Date,"day")||h.games.push(a)}),h.games.length>0&&(h.selectedGameDate=moment(h.games[0].date).format("DD.MM.YYYY"),b.getRegistration({gameId:h.games[0].id,userId:d.userId}).then(function(a){a&&(h.regExists=!0,h.playGame=!0,h.preferredTimeslot=a.preferredTimeslot,h.duration=a.duration,h.backToCompany=a.backToCompany,h.dinner=a.dinner)}))})}),h.save=function(){g.show({template:"Daten werden übermittelt..."}),b.register({gameId:h.games[0].id,userId:d.userId,playGame:h.playGame,preferredTimeslot:h.preferredTimeslot,duration:h.duration,backToCompany:h.backToCompany,passengers:h.passengers,dinner:h.dinner}).then(function(){h.regExists=!!h.playGame,g.hide()})}}function Settings(a){"use strict";var b=this;b.preferredTimeslotOptions=["Egal","Früh","Spät"],b.durationOptions=["Egal","1,0h","1,5h","2,0h"],b.preferredTimeslot=a.get("preferredTimeslot")||"Egal",b.duration=a.get("duration")||"Egal",b.backToCompany=a.get("backToCompany")||!1,b.dinner=a.get("dinner")||!1,b.onModelChange=function(b,c){a.set(b,c)}}function Administration(a,b,c,d,e){"use strict";var f=this;f.dateAlreadyExists=!1,d.$on("$ionicView.enter",function(){f.games=[],a.getGames().then(function(a){f.games=a})}),f.addNewGameDatePickerCallback=function(c){if("undefined"==typeof c)return void console.log("Date not selected");if(b.each(f.games,function(a){moment(a.date).isSame(c,"day")&&(f.dateAlreadyExists=!0)}),!f.dateAlreadyExists){f.dateAlreadyExists=!1;var d={date:moment(c).format("YYYY-MM-DD"),state:"planned"};a.createGame(d).then(function(a){return 422===a.status?void(f.dateAlreadyExists=!0):void f.games.push(d)})}},f.showConfirm=function(a){var b=e.confirm({title:"Spielzustand ändern?",template:"Wenn du das Spiel startest, kann sich kein Spieler mehr an- oder abmelden.<br>Wenn du das Spiel beendest, wird es archiviert."});b.then(function(b){b&&f.changeGameState(a)})},f.changeGameState=function(b){"running"===b.state&&(b.state="stopped"),"planned"===b.state&&(b.state="running"),a.changeGameState(b).then(function(a){angular.forEach(f.games,function(b){b.id===a.id&&(b=a)})})},f.futureGames=function(a){var c=[];return b.each(a,function(a){moment(a.date).isBefore(new Date,"day")||c.push(a)}),c}}function GameOverview(a,b,c,d){"use strict";var e=this;c.$on("$ionicView.enter",function(){c.reloadContent()}),c.reloadContent=function(){e.games=[],a.getGamesWithRegistrations().then(function(a){d.each(a,function(a){moment(a.date).isBefore(new Date,"day")||e.games.push(a)})})["finally"](function(){c.$broadcast("scroll.refreshComplete")})}}angular.module("starter",["ionic","angularMoment","ngLodash","starter.app","config","starter.registerGame","starter.settings","LocalStorageModule","ionic-datepicker","starter.administration","starter.gameOverview","http-auth-interceptor"]).run(["$ionicPlatform","amMoment","Config","localStorageService",function(a,b,c,d){"use strict";a.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),window.StatusBar&&StatusBar.styleDefault(),b.changeLocale("de"),c.token=d.get("token")||void 0,c.username=d.get("username")||void 0,c.userId=d.get("userId")||void 0})}]).config(["$stateProvider","$urlRouterProvider",function(a,b){"use strict";a.state("app",{url:"","abstract":!0,templateUrl:"states/index/menu.html",controller:"App as app"}).state("app.registerGame",{url:"/register-game",views:{menuContent:{templateUrl:"states/register-game/register-game.html",controller:"RegisterGame as regGame"}}}).state("app.gameOverview",{url:"/game-overview",views:{menuContent:{templateUrl:"states/game-overview/game-overview.html",controller:"GameOverview as gameOverview"}}}).state("app.settings",{url:"/settings",views:{menuContent:{templateUrl:"states/settings/settings.html",controller:"Settings as settings"}}}).state("app.administration",{url:"/administration",views:{menuContent:{templateUrl:"states/administration/administration.html",controller:"Administration as admin"}}}),b.otherwise("/register-game")}]).constant("Config",{token:void 0,username:void 0,userId:void 0}).config(["$httpProvider","Config",function(a,b){"use strict";a.defaults.useXDomain=!0,delete a.defaults.headers.common["X-Requested-With"],a.interceptors.push(["$q","$rootScope",function(a,c){return{request:function(a){return b.token&&(a.headers.Authorization=b.token),a},responseError:function(d){return 401===d.status&&(b.token=void 0,b.username=void 0,b.userId=void 0,c.$emit("showLogin")),a.reject(d)}}}])}]),angular.module("starter.app",[]).controller("App",App),App.$inject=["$rootScope","$ionicModal","$timeout","playerService","Config"],angular.module("config",[]).constant("ENV",{name:"production",apiEndpoint:"https://dashboard.heroku.com/apps/desolate-mountain-4920/api"}),angular.module("starter.app").factory("playerService",playerService),playerService.$inject=["$http","$log","Config","authService","localStorageService","ENV"],angular.module("starter.app").factory("gameService",gameService),gameService.$inject=["$http","$log","ENV"],angular.module("starter.app").factory("registrationService",registrationService),registrationService.$inject=["$http","$log","ENV"],angular.module("starter.registerGame",[]).controller("RegisterGame",RegisterGame),RegisterGame.$inject=["gameService","registrationService","lodash","Config","localStorageService","$scope","$ionicLoading"],angular.module("starter.settings",[]).controller("Settings",Settings),Settings.$inject=["localStorageService"],angular.module("starter.administration",[]).controller("Administration",Administration),Administration.$inject=["gameService","lodash","$ionicModal","$scope","$ionicPopup"],angular.module("starter.gameOverview",[]).controller("GameOverview",GameOverview),GameOverview.$inject=["gameService","registrationService","$scope","lodash"],function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(require("../moment")):"function"==typeof define&&define.amd?define(["moment"],b):b(a.moment)}(this,function(a){"use strict";function b(a,b,c,d){var e={m:["eine Minute","einer Minute"],h:["eine Stunde","einer Stunde"],d:["ein Tag","einem Tag"],dd:[a+" Tage",a+" Tagen"],M:["ein Monat","einem Monat"],MM:[a+" Monate",a+" Monaten"],y:["ein Jahr","einem Jahr"],yy:[a+" Jahre",a+" Jahren"]};return b?e[c][0]:e[c][1]}var c=a.defineLocale("de",{months:"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),weekdays:"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),weekdaysShort:"So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),weekdaysMin:"So_Mo_Di_Mi_Do_Fr_Sa".split("_"),longDateFormat:{LT:"HH:mm",LTS:"HH:mm:ss",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY HH:mm",LLLL:"dddd, D. MMMM YYYY HH:mm"},calendar:{sameDay:"[Heute um] LT [Uhr]",sameElse:"L",nextDay:"[Morgen um] LT [Uhr]",nextWeek:"dddd [um] LT [Uhr]",lastDay:"[Gestern um] LT [Uhr]",lastWeek:"[letzten] dddd [um] LT [Uhr]"},relativeTime:{future:"in %s",past:"vor %s",s:"ein paar Sekunden",m:b,mm:"%d Minuten",h:b,hh:"%d Stunden",d:b,dd:b,M:b,MM:b,y:b,yy:b},ordinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,doy:4}});return c});